# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

parameters:
  - name: Environment
    type: string

jobs:
- job: Build
  strategy:
    matrix:
      Android:
        ImageName: 'ubuntu-latest'
        Platform: android
      # iOS:
      #   ImageName: 'macOS-latest'
      #   Platform: ios

  pool:
    vmImage: $(ImageName)

  steps:
    - task: CmdLine@2
      displayName: Set app version
      inputs:
        script: |
          CURRENT_APP_VERSION=$(cat package.json | grep -m 1 version | sed 's/[^0-9.]//g')
          echo "Essa é a versão ${CURRENT_APP_VERSION}"
          echo "##vso[task.setvariable variable=AppVersion;]${CURRENT_APP_VERSION}"

    - script: echo "Essa é a versão ${{variables['AppVersion']}}"
      displayName: Appversion ${{ variables.AppVersion }}
    - task: NodeTool@0
      inputs:
        versionSource: 'fromFile'
        versionFilePath: .nvmrc
      displayName: 'Install Node.js'

    - task: CmdLine@2
      displayName: yarn/npm install
      inputs:
        script: yarn

    - task: CmdLine@2
      displayName: Install fastlane using Gemfile
      inputs:
        script: |
          sudo gem install bundler
          sudo bundle install

    - task: CmdLine@2
      displayName: Run fastlane
      condition: succeeded()
      inputs:
        script: |
          bundle exec fastlane $(Platform) build \
            env:${{ parameters.Environment }} version_code:$(Build.BuildId)

    - task: CopyFiles@2
      displayName: Copy compiled binary
      condition: succeeded()
      inputs:
        contents: android/**/*.apk
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true
        OverWrite: true

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: ${CURRENT_APP_VERSION}/$(Build.BuildId)
      displayName: Save compiled binary
